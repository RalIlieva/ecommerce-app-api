name: Checks

on: [push]

jobs:
  test-lint:
    name: Test and Lint

    runs-on: ubuntu-20.04
    env:
      DB_HOST: db
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .env file
        run: |
          echo "DB_HOST=${{ env.DB_HOST }}" >> .env
          echo "DB_NAME=${{ env.DB_NAME }}" >> .env
          echo "DB_USER=${{ env.DB_USER }}" >> .env
          echo "DB_PASS=${{ env.DB_PASS }}" >> .env
          echo "STRIPE_SECRET_KEY=${{ env.STRIPE_SECRET_KEY }}" >> .env
          echo "STRIPE_PUBLISHABLE_KEY=${{ env.STRIPE_PUBLISHABLE_KEY }}" >> .env
          echo "SECRET_KEY=${{ env.SECRET_KEY }}" >> .env

      - name: Build and start services
        run: docker compose up -d db

      - name: Wait for db service to be healthy
        run: |
          echo "Waiting for the database service to be healthy..."
          until [ "$(docker inspect -f '{{.State.Health.Status}}' $(docker compose ps -q db))" == "healthy" ]; do
            sleep 5
            echo "Still waiting for database..."
          done
          echo "Database is healthy!"

      - name: Test
        run: docker compose run --rm app sh -c "python manage.py test"

      - name: Lint
        run: docker compose run --rm app sh -c "flake8"

      - name: Shutdown services
        if: always()
        run: docker compose down


#---
#name: Checks
#
#on: [push]
#
#jobs:
#  test-lint:
#    name: Test and Lint
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USER }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Test
#        run: docker compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
#      - name: Lint
#        run: docker compose run --rm app sh -c "flake8"
