# Generated by Django 5.0.9 on 2024-09-20 18:10

import uuid
from django.db import migrations, models


def assign_unique_uuids(apps, schema_editor):
    Category = apps.get_model('products', 'Category')
    Tag = apps.get_model('products', 'Tag')
    for category in Category.objects.all():
        category.uuid = uuid.uuid4()
        category.save()
    for tag in Tag.objects.all():
        tag.uuid = uuid.uuid4()
        tag.save()


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0004_review_uuid_alter_product_slug_alter_product_uuid'),
    ]

    operations = [
        # Step 1: Add 'uuid' fields as nullable and without unique constraints
        migrations.AddField(
            model_name='category',
            name='uuid',
            field=models.UUIDField(null=True, blank=True),
        ),
        migrations.AddField(
            model_name='tag',
            name='uuid',
            field=models.UUIDField(null=True, blank=True),
        ),
        # Step 2: Assign unique UUIDs to existing records
        migrations.RunPython(assign_unique_uuids),
        # Step 3: Alter 'uuid' fields to set unique=True, default=uuid.uuid4, and null=False
        migrations.AlterField(
            model_name='category',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True, null=False, db_index=True),
        ),
        migrations.AlterField(
            model_name='tag',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True, null=False, db_index=True),
        ),
    ]
